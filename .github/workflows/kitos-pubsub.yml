name: Deploy Kitos PubSub

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        default: 'Staging'
        options:
          - 'Development'
          - 'Staging'
          - 'Production'

env:
  DOCKER_REPO: kitos-pubsub
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  SERVER_APP_ROOT_FOLDER: "/home/kitosadmintest/app"
  PROJECT_APP_FOLDER: "PubSub.Application"
  PROJECT_TEST_FOLDER: "PubSub.Test"

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run unit tests
        working-directory: ${{ env.PROJECT_TEST_FOLDER }}
        run: dotnet test --logger trx --results-directory TestResults
      
      - name: Upload unit test results
        uses: actions/uploads-artifact@v3
        with:
          name: kitos-pubsub-unit-test-results
          path: ${{ env.PROJECT_TEST_FOLDER }}/TestResults
          retention-days: 7


      - name: Login to Docker Hub
        run: echo "${{ env.DOCKER_PASSWORD }}" | docker login -u "${{ env.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push PubSub API Docker image
        run: |
          TAG=${{ github.event.inputs.environment }}  # Tag images based on environment
          sh ${{ env.PROJECT_APP_FOLDER }}/Deployment/build_and_push_docker_image.sh ${{ env.DOCKER_USERNAME }} ${{ env.DOCKER_REPO }} $TAG

      - name: Copy docker-compose to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.PUBSUB_SERVER }}
          username: ${{ secrets.DEPLOY_USER }}
          password: ${{ secrets.DEPLOY_PASSWORD }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "${{ env.PROJECT_APP_FOLDER }}/docker-compose.yml"
          target: ${{ env.SERVER_APP_ROOT_FOLDER }}

      - name: Copy run script to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.PUBSUB_SERVER }}
          username: ${{ secrets.DEPLOY_USER }}
          password: ${{ secrets.DEPLOY_PASSWORD }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "${{ env.PROJECT_APP_FOLDER }}/Deployment/run_in_docker_compose.sh"
          target: ${{ env.SERVER_APP_ROOT_FOLDER }}

      - name: Deploy PubSub API
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.PUBSUB_SERVER }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ env.SERVER_APP_ROOT_FOLDER }}
            sudo sh run_in_docker_compose.sh ${{ github.event.inputs.environment }} ${{ secrets.RABBIT_MQ_USERNAME }} ${{ secrets.RABBIT_MQ_PASSWORD }} ${{ secrets.PUBSUB_API_KEY }} ${{ secrets.IDP_HOST_MAPPING }} ${{ env.DOCKER_USERNAME }}
