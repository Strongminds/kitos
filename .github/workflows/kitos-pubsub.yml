name: Deploy Kitos PubSub

env:
    RABBIT_MQ_USERNAME: ${{ secrets.RABBIT_MQ_USERNAME }}
    RABBIT_MQ_PASSWORD: ${{ secrets.RABBIT_MQ_PASSWORD }}
    PUBSUB_API_KEY: ${{ secrets.PUBSUB_API_KEY }}
    DOCKER_REPO: kitos-pubsub

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        default: 'Staging'
        options:
          - 'Development'
          - 'Staging'
          - 'Production'
  
jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Set Environment Variables 
        id: vars 
        run: | 
          if [ "${{ github.event.inputs.environment }}" == "Staging" ]; then 
            echo "SERVER=${{ secrets.STAGING_PUBSUB_SERVER }}" >> $GITHUB_ENV 
            echo "TAG=staging" >> $GITHUB_ENV
          fi 

      - name: Build and push Docker image of PubSub API
        run: |
          pwd
          sh PubSub.Application/Deployment/build-and-push-docker-image.sh ${{ secrets.DOCKER_USERNAME }} ${{ env.DOCKER_REPO }} ${{ env.TAG }} 

       # docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:latest --file PubSub.Application/Dockerfile .
            # docker tag ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:latest ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:${{ env.TAG }} 
            # docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:latest 
            # docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:${{ env.TAG }} 
    
      - name: deploy-pubsub-api
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.SERVER }} 
          username: ${{ secrets.STAGING_DEPLOY_USER }} 
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: | 
            cd /home/kitosadmintest/app 
            docker-compose pull 
            docker-compose up -d --remove-orphans 
            docker image prune -f 
      
      # - name: Deploy PubSub API
      #   working-directory: PubSub.Application
      #   run: sh ./Deployment/deploy_to_docker_compose.sh ${{ github.event.inputs.environment }} ${{ env.RABBIT_MQ_USERNAME }} ${{ env.RABBIT_MQ_PASSWORD }} ${{ env.PUBSUB_API_KEY }}
        

